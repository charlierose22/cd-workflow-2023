mzcloud <- split$"No results"
masslists <- split$"Full match"
# MERGE MASS LISTS INTO ONE COLUMN
masslistmerged <- masslists %>%
pivot_longer(cols = c(starts_with("mass_list_match")) ,
names_to = "mass_list_name",
names_prefix = "mass_list_match_",
values_to = "mass_list_match")
# FILTER FOR NO MATCHES AND INVALID MASS RESULTS
filteredmasslist <- masslistmerged[!grepl('No matches found',
masslistmerged$mass_list_match),]
filteredmzcloud <- mzcloud[!grepl('Invalid Mass',
mzcloud$annot_source_mz_cloud_search),]
# SPLIT THE INDIVIDUAL MASS LISTS
# FIRST FIND MASS LIST NAMES (APPEARING IN CONSOLE)
unique(filteredmasslist$mass_list_name)
# THEN SPLIT BY MASS LIST
splitmasslist <- split(filteredmasslist, filteredmasslist$mass_list_name)
antibiotics <- splitmasslist$"antibiotics_itn_msca_answer_160616_w_dtxsi_ds"
metabolites <- splitmasslist$"itnantibiotic_cyp_metabolites"
psychoactive <- splitmasslist$"kps_psychoactive_substances_v2"
pharmaceuticals <- splitmasslist$"kps_pharmaceuticals"
# wide view for samples
antibiotics_means <- antibiotics %>%
group_by(pick(peak_number, sample_location, day, height, length)) %>%
summarise(mean = mean(group_area),
std = sd(group_area),
n = length(group_area),
se = std/sqrt(n))
antibiotics_info <- select(antibiotics,
-replicate,
-sample,
-peak_rating,
-group_area,
-sample_location,
-day,
-height,
-length)
antibiotics_info <- unique(antibiotics_info)
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number")
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample_location,
mean,
day,
height,
length)
antibiotics_wide <- antibiotics_annotated %>%
group_by(name) %>%
pivot_wider(names_from = sample_location, values_from = mean)
# PRODUCE A CSV OF RESULTS
write.csv(itn_antibiotics, "data/processed/2023-naburn-drying/itn_antibiotics.csv",
row.names = FALSE)
# PRODUCE A CSV OF RESULTS
write.csv(antibiotics, "data/processed/2023-naburn-drying/itn_antibiotics.csv",
row.names = FALSE)
write.csv(metabolites, "data/processed/2023-naburn-drying/itn_metabolites.csv",
row.names = FALSE)
write.csv(psychoactive, "data/processed/2023-naburn-drying/psychoactive.csv",
row.names = FALSE)
write.csv(pharmaceuticals, "data/processed/2023-naburn-drying/pharmaceuticals.csv",
row.names = FALSE)
write.csv(antibiotics_wide, "data/processed/2023-naburn-drying/antibiotics_wide.csv")
source("~/GitHub/cd_workflow_2023/scripts/2023-09-naburn-drying.R")
View(antibiotics_annotated)
# PRODUCE A HEATMAP TO QUICKLY VISUALISE RESULTS
# CHANGE HEIGHT AND WIDTH AND MIDPOINT AS NEEDED
antibiotics_annotated %>%
ggplot(aes(y = name,
x = sample_location,
fill = mean)) +
geom_tile() +
scale_y_discrete(limits = rev) +
scale_fill_gradient2(low = "turquoise3",
high = "orange",
mid = "yellow",
midpoint = 2e+08) +
labs(x = "Sample", y = "Compound Name", colour = "Intensity") +
theme_bw(base_size = 10) +
theme(panel.grid.major = element_line(colour = "gray80"),
panel.grid.minor = element_line(colour = "gray80"),
axis.text.x = element_text(angle = 90),
legend.text = element_text(family = "serif",
size = 10),
axis.text = element_text(family = "serif",
size = 10),
axis.title = element_text(family = "serif",
size = 10, face = "bold", colour = "gray20"),
legend.title = element_text(size = 10,
family = "serif"),
plot.background = element_rect(colour = NA,
linetype = "solid"),
legend.key = element_rect(fill = NA)) + labs(fill = "Intensity")
source("~/GitHub/cd_workflow_2023/scripts/2023-09-naburn-drying.R")
View(antibiotics_wide)
View(antibiotics_annotated)
antibiotics_annotated$sample <- paste(antibiotics_annotated$day, "-",
antibiotics_annotated$height, "-",
antibiotics_annotated$length)
View(antibiotics_annotated)
antibiotics_annotated$sample <- paste(antibiotics_annotated$day,
antibiotics_annotated$height,
antibiotics_annotated$length,
sep = "-")
View(antibiotics_annotated)
antibiotics_annotated <- select(antibiotics_annotated,
-sample_location,
-day,
-height,
-length)
View(antibiotics_annotated)
antibiotics_wide <- antibiotics_annotated %>%
group_by(name) %>%
pivot_wider(names_from = sample, values_from = mean)
View(antibiotics_wide)
# INCLUDE SAMPLE INFO IF NEEDED
sample_info <- readr::read_csv("data/samples/2023-09-naburn-drying-samples.csv")
sample_included <- soloremoved %>% left_join(sample_info,
by = "sample_location")
#----
# SPLIT RESULTS BASED ON MASS LIST VS MZCLOUD
split <- split(sample_included, sample_included$annot_source_mass_list_search)
mzcloud <- split$"No results"
masslists <- split$"Full match"
# MERGE MASS LISTS INTO ONE COLUMN
masslistmerged <- masslists %>%
pivot_longer(cols = c(starts_with("mass_list_match")) ,
names_to = "mass_list_name",
names_prefix = "mass_list_match_",
values_to = "mass_list_match")
# FILTER FOR NO MATCHES AND INVALID MASS RESULTS
filteredmasslist <- masslistmerged[!grepl('No matches found',
masslistmerged$mass_list_match),]
filteredmzcloud <- mzcloud[!grepl('Invalid Mass',
mzcloud$annot_source_mz_cloud_search),]
# SPLIT THE INDIVIDUAL MASS LISTS
# FIRST FIND MASS LIST NAMES (APPEARING IN CONSOLE)
unique(filteredmasslist$mass_list_name)
# THEN SPLIT BY MASS LIST
splitmasslist <- split(filteredmasslist, filteredmasslist$mass_list_name)
antibiotics <- splitmasslist$"antibiotics_itn_msca_answer_160616_w_dtxsi_ds"
metabolites <- splitmasslist$"itnantibiotic_cyp_metabolites"
psychoactive <- splitmasslist$"kps_psychoactive_substances_v2"
pharmaceuticals <- splitmasslist$"kps_pharmaceuticals"
# wide view for samples
antibiotics_means <- antibiotics %>%
group_by(pick(peak_number, sample_location, day, height, length)) %>%
summarise(mean = mean(group_area),
std = sd(group_area),
n = length(group_area),
se = std/sqrt(n))
antibiotics_info <- select(antibiotics,
-replicate,
-sample,
-peak_rating,
-group_area,
-sample_location,
-day,
-height,
-length)
antibiotics_info <- unique(antibiotics_info)
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number")
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample_location,
mean,
day,
height,
length)
antibiotics_annotated$sample <- paste(antibiotics_annotated$day,
antibiotics_annotated$height,
antibiotics_annotated$length,
sep = "-")
antibiotics_annotated <- select(antibiotics_annotated,
-sample_location,
-day,
-height,
-length)
antibiotics_wide <- antibiotics_annotated %>%
group_by(name) %>%
pivot_wider(names_from = sample, values_from = mean)
View(antibiotics_wide)
# wide view for samples
antibiotics_means <- antibiotics %>%
group_by(pick(peak_number, sample_location, day, height, length)) %>%
summarise(mean = mean(group_area),
std = sd(group_area),
n = length(group_area),
se = std/sqrt(n))
source("~/GitHub/cd_workflow_2023/scripts/2023-09-naburn-drying.R")
View(antibiotics_wide)
View(antibiotics_means)
antibiotics_info <- select(antibiotics,
-replicate,
-sample,
-peak_rating,
-group_area,
-sample_location,
-day,
-height,
-length)
View(antibiotics_info)
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number")
# wide view for samples
antibiotics_means <- antibiotics %>%
group_by(pick(peak_number, sample_location, day, height, length)) %>%
summarise(mean = mean(group_area),
std = sd(group_area),
n = length(group_area),
se = std/sqrt(n))
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample_location,
mean,
day,
height,
length)
View(antibiotics_annotated)
antibiotics_annotated <- select(antibiotics_annotated,
-sample_location,
-day,
-height,
-length)
antibiotics_annotated$sample <- paste(antibiotics_annotated$day,
antibiotics_annotated$height,
antibiotics_annotated$length,
sep = "-")
antibiotics_annotated <- select(antibiotics_annotated,
-sample_location,
-day,
-height,
-length)
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number")
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample_location,
mean,
day,
height,
length)
antibiotics_annotated$sample <- paste(antibiotics_annotated$day,
antibiotics_annotated$height,
antibiotics_annotated$length,
sep = "-")
View(antibiotics_annotated)
antibiotics_annotated <- select(antibiotics_annotated,
-sample_location,
-day,
-height,
-length)
View(antibiotics_annotated)
antibiotics_wide <- antibiotics_annotated %>%
group_by(name) %>%
pivot_wider(names_from = sample, values_from = mean)
View(antibiotics_wide)
View(antibiotics_means)
# wide view for samples
antibiotics_means <- antibiotics %>%
group_by(pick(peak_number, sample_location, day, height, length)) %>%
summarise(mean = mean(group_area),
std = sd(group_area),
n = length(group_area),
se = std/sqrt(n))
View(antibiotics_means)
antibiotics_info <- select(antibiotics,
-replicate,
-sample,
-peak_rating,
-group_area,
-sample_location,
-day,
-height,
-length)
View(antibiotics_info)
antibiotics_info <- unique(antibiotics_info)
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number")
View(antibiotics_annotated)
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample_location,
mean,
day,
height,
length)
View(antibiotics_annotated)
antibiotics_annotated$sample <- paste(antibiotics_annotated$day,
antibiotics_annotated$height,
antibiotics_annotated$length,
sep = "-")
View(antibiotics_annotated)
antibiotics_annotated <- select(antibiotics_annotated,
-sample_location,
-day,
-height,
-length)
View(antibiotics_annotated)
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample_location,
mean,
day,
height,
length)
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number")
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample_location,
mean,
day,
height,
length)
antibiotics_annotated$sample <- paste(antibiotics_annotated$day,
antibiotics_annotated$height,
antibiotics_annotated$length,
sep = "-")
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample,
mean,)
View(samplenames)
View(sample_info)
View(sample_included)
sample_included$sample_name <- paste(sample_included$day,
sample_included$height,
sample_included$length,
sep = "-")
View(sample_included)
sample_included <- select(sample_included,
-day,
-height,
-length)
View(sample_included)
#----
# SPLIT RESULTS BASED ON MASS LIST VS MZCLOUD
split <- split(sample_included, sample_included$annot_source_mass_list_search)
mzcloud <- split$"No results"
masslists <- split$"Full match"
# MERGE MASS LISTS INTO ONE COLUMN
masslistmerged <- masslists %>%
pivot_longer(cols = c(starts_with("mass_list_match")) ,
names_to = "mass_list_name",
names_prefix = "mass_list_match_",
values_to = "mass_list_match")
# FILTER FOR NO MATCHES AND INVALID MASS RESULTS
filteredmasslist <- masslistmerged[!grepl('No matches found',
masslistmerged$mass_list_match),]
filteredmzcloud <- mzcloud[!grepl('Invalid Mass',
mzcloud$annot_source_mz_cloud_search),]
# SPLIT THE INDIVIDUAL MASS LISTS
# FIRST FIND MASS LIST NAMES (APPEARING IN CONSOLE)
unique(filteredmasslist$mass_list_name)
# THEN SPLIT BY MASS LIST
splitmasslist <- split(filteredmasslist, filteredmasslist$mass_list_name)
antibiotics <- splitmasslist$"antibiotics_itn_msca_answer_160616_w_dtxsi_ds"
metabolites <- splitmasslist$"itnantibiotic_cyp_metabolites"
psychoactive <- splitmasslist$"kps_psychoactive_substances_v2"
pharmaceuticals <- splitmasslist$"kps_pharmaceuticals"
# wide view for samples
antibiotics_means <- antibiotics %>%
group_by(pick(peak_number, sample_name)) %>%
summarise(mean = mean(group_area),
std = sd(group_area),
n = length(group_area),
se = std/sqrt(n))
# wide view for samples
antibiotics_means <- antibiotics %>%
group_by(pick(peak_number, sample_name)) %>%
summarise(mean = mean(group_area),
std = sd(group_area),
n = length(group_area),
se = std/sqrt(n))
antibiotics_info <- select(antibiotics,
-replicate,
-sample,
-peak_rating,
-group_area,
-sample_location)
antibiotics_info <- unique(antibiotics_info)
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number")
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number, sample_name")
antibiotics_info <- select(antibiotics,
-replicate,
-sample,
-peak_rating,
-group_area,
-sample_location,
-sample_name)
antibiotics_info <- unique(antibiotics_info)
antibiotics_annotated <- antibiotics_means %>% left_join(antibiotics_info,
by = "peak_number")
antibiotics_annotated <- select(antibiotics_annotated,
peak_number,
name,
formula,
calc_mw,
m_z,
sample_name,
mean)
View(antibiotics_annotated)
antibiotics_wide <- antibiotics_annotated %>%
group_by(name) %>%
pivot_wider(names_from = sample, values_from = mean)
antibiotics_wide <- antibiotics_annotated %>%
group_by(name) %>%
pivot_wider(names_from = sample_name, values_from = mean)
View(antibiotics_wide)
# PRODUCE A CSV OF RESULTS
write.csv(antibiotics, "data/processed/2023-naburn-drying/itn_antibiotics.csv",
row.names = FALSE)
write.csv(metabolites, "data/processed/2023-naburn-drying/itn_metabolites.csv",
row.names = FALSE)
write.csv(psychoactive, "data/processed/2023-naburn-drying/psychoactive.csv",
row.names = FALSE)
write.csv(pharmaceuticals, "data/processed/2023-naburn-drying/pharmaceuticals.csv",
row.names = FALSE)
write.csv(antibiotics_wide, "data/processed/2023-naburn-drying/antibiotics_wide.csv")
# PRODUCE A HEATMAP TO QUICKLY VISUALISE RESULTS
# CHANGE HEIGHT AND WIDTH AND MIDPOINT AS NEEDED
antibiotics_annotated %>%
ggplot(aes(y = name,
x = sample_location,
fill = mean)) +
geom_tile() +
scale_y_discrete(limits = rev) +
scale_fill_gradient2(low = "turquoise3",
high = "orange",
mid = "yellow",
midpoint = 2e+08) +
labs(x = "Sample", y = "Compound Name", colour = "Intensity") +
theme_bw(base_size = 10) +
theme(panel.grid.major = element_line(colour = "gray80"),
panel.grid.minor = element_line(colour = "gray80"),
axis.text.x = element_text(angle = 90),
legend.text = element_text(family = "serif",
size = 10),
axis.text = element_text(family = "serif",
size = 10),
axis.title = element_text(family = "serif",
size = 10, face = "bold", colour = "gray20"),
legend.title = element_text(size = 10,
family = "serif"),
plot.background = element_rect(colour = NA,
linetype = "solid"),
legend.key = element_rect(fill = NA)) + labs(fill = "Intensity")
# PRODUCE A HEATMAP TO QUICKLY VISUALISE RESULTS
# CHANGE HEIGHT AND WIDTH AND MIDPOINT AS NEEDED
antibiotics_annotated %>%
ggplot(aes(y = name,
x = sample_name,
fill = mean)) +
geom_tile() +
scale_y_discrete(limits = rev) +
scale_fill_gradient2(low = "turquoise3",
high = "orange",
mid = "yellow",
midpoint = 2e+08) +
labs(x = "Sample", y = "Compound Name", colour = "Intensity") +
theme_bw(base_size = 10) +
theme(panel.grid.major = element_line(colour = "gray80"),
panel.grid.minor = element_line(colour = "gray80"),
axis.text.x = element_text(angle = 90),
legend.text = element_text(family = "serif",
size = 10),
axis.text = element_text(family = "serif",
size = 10),
axis.title = element_text(family = "serif",
size = 10, face = "bold", colour = "gray20"),
legend.title = element_text(size = 10,
family = "serif"),
plot.background = element_rect(colour = NA,
linetype = "solid"),
legend.key = element_rect(fill = NA)) + labs(fill = "Intensity")
