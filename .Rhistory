install.packages(c("gganimate", "ggplot2", "tidyverse", "dplyr", "plyr", "readxl", "readr", "gifski"))
# install/load packages
library(tidyverse)
library(dplyr)
library(readxl)
library(readr)
library(readr)
Raw_Data <- read_csv("Raw_Data.csv")
View(Raw_Data)
# import data
Raw_Data <- read_csv("Raw_Data.csv")
# install/load packages
library(tidyverse)
library(readxl)
library(readr)
# import data
Raw_Data <- read_csv("Raw_Data.csv")
View(Raw_Data)
# install/load packages (working within a project so working directory is fine)
library(tidyverse)
# import data from csv file, using the janitor package to clean the name format up.
Raw_Data <- readr::read_csv("~/Desktop/Charlie_CD/Charlie_CD/Raw_Data.csv") %>%
janitor::clean_names()
# drop unnecessary columns entirely, unless you have used them in the CD software.
Raw_Data$tags = NULL
Raw_Data$checked = NULL
# to make sure we don't edit any raw data files, duplicate and call the original dataset "base".
Base <- Raw_Data
# starting with the group area measurements, lengthen the table to erase white space.
# this will also clean up names so we can see which sample each compound is found in.
# the first "select" function removes the peak rating data, so we can deal with that later.
Group_Area <- select(Base, -c(starts_with("peak")))
Group_Area_Long <- pivot_longer(Group_Area,
c(starts_with("group")),
names_to = "sample",
names_prefix = "group_area_",
values_to = "group_area")
# do the same with the peak rating data, as was done with the group area measurements.
# remove the group area data first, as we have lengthened this already.
Peak_Rating <- select(Base, -c(starts_with("group")))
Peak_Rating_Long <- pivot_longer(Peak_Rating,
c(starts_with("peak")),
names_to = "sample",
names_prefix = "peak_rating_",
values_to = "peak_rating")
# clean up sample names column in the peak_rating_table, to remove the numbered file names from the CD software.
# this line uses regular expressions to tell us which part of the name to remove.
# clean up sample names column in the peak_rating_table, to remove the numbered file names from the CD software.
# this line uses regular expressions to tell us which part of the name to remove.
Peak_Rating_Long$sample <- stringi::stri_replace_all_regex(Peak_Rating_Long$sample, "^*_raw_f[\\dd]*", "")
View(Peak_Rating_Long)
View(Group_Area)
View(Base)
View(Group_Area_Long)
View(Peak_Rating_Long)
View(Peak_Rating_Long)
View(Peak_Rating)
# concatenate compound names and retention times to make a unique identifier
BaseUniqueID <- add_column(Base, "unique_id", .after = 1)
BaseUniqueID$unique_id = str_c(BaseUniqueID$name, "_", BaseUniqueID$rt_min)
View(BaseUniqueID)
# concatenate compound names and retention times to make a unique identifier
BaseUniqueID <- add_column(Base, unique_id, .after = 1)
# to make sure we don't edit any raw data files, duplicate and call the original dataset "base".
Base <- Raw_Data
# concatenate compound names and retention times to make a unique identifier
BaseUniqueID <- add_column(Base, unique_id, .after = 1)
# concatenate compound names and retention times to make a unique identifier
Base$unique_id = NA
View(Base)
as.data.frame(Base)
BaseUniqueID <- add_column(Base, unique_id, .after = 1)
# to make sure we don't edit any raw data files, duplicate and call the original dataset "base".
Base <- Raw_Data
# concatenate compound names and retention times to make a unique identifier
BaseUniqueID <- add_column(Base, unique_id = NA, .after = 1)
View(BaseUniqueID)
# to make sure we don't edit any raw data files, duplicate and call the original dataset "base".
Base <- Raw_Data
# concatenate compound names and retention times to make a unique identifier
BaseUniqueID <- add_column(Base, unique_id = NA, .after = 0)
View(BaseUniqueID)
BaseUniqueID_Fill <- unite(BaseUniqueID$unique_id, name:rt_min)
BaseUniqueID_Fill <- BaseUniqueID$unique_id <- str_c(BaseUniqueID$name, "_", BaseUniqueID$rt_min)
View(BaseUniqueID)
View(BaseUniqueID)
View(BaseUniqueID)
# add peak numer in as another unique identifier.
BaseUniqueID_PeakNumber <- add_column(BaseUniqueID, peak_number = NA, .after = 0)
View(BaseUniqueID_PeakNumber)
BaseUniqueID_PeakNumber$peak_number <- seq.int(nrow(BaseUniqueID_PeakNumber))
# starting with the group area measurements, lengthen the table to erase white space.
# this will also clean up names so we can see which sample each compound is found in.
# the first "select" function removes the peak rating data, so we can deal with that later.
#Group_Area <- select(Base, -c(starts_with("peak")))
Group_Area_Long <- pivot_longer(BaseUniqueID_PeakNumber, c(starts_with("group")),
names_to = "sample",
names_prefix = "group_area_",
values_to = "group_area")
View(Group_Area_Long)
# do the same with the peak rating data, as was done with the group area measurements.
# remove the group area data first, as we have lengthened this already.
Peak_Rating_Long <- pivot_longer(Group_Area_Long,
c(contains("rating")),
names_to = "sample_file",
names_prefix = "peak_rating_",
values_to = "peak_rating")
View(Peak_Rating_Long)
View(BaseUniqueID)
View(Peak_Rating_Long)
View(Group_Area_Long)
steve = colnames(Group_Area_Long)
View(steve)
write.csv(steve, file="col_names.txt", sep="\n")
write.csv(steve, file="col_names.txt")
write.csv(steve, file="col_names.txt", sep="\t")
write.table(steve, file="col_names.txt",)
# clean up sample names column in the peak_rating_table, to remove the numbered file names from the CD software.
# this line uses regular expressions to tell us which part of the name to remove.
Peak_Rating_Long$sample_file <- stringi::stri_replace_all_regex(Peak_Rating_Long$sample_file, "^*_raw_f[\\dd]*", "")
View(Peak_Rating_Long)
